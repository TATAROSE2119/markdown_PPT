**公式 9** 和 **公式 12** 都涉及到 **HSIC (Hilbert-Schmidt Independence Criterion)** 的计算，但它们各自的目标和计算步骤有所不同。下面是两者的比较，突出它们的相同点和不同点。

### **公式 9：**

公式 9 计算的是 **HSIC** 的经验估计：

\[
\text{HSIC}(Z, \mathcal{H}_X, \mathcal{H}_Y) = \frac{1}{(n-1)^2} \text{tr}(K_X H K_Y H)
\]

#### **主要组成**：
- **\( K_X \)** 和 **\( K_Y \)** 是由核函数计算出的 **Gram 矩阵**，分别表示数据集 \( X \) 和 \( Y \) 在高维空间中的相似度。
- **\( H \)** 是居中矩阵，用于对数据进行中心化，消除均值效应。
- **\( \text{tr}(\cdot) \)** 是矩阵的迹运算，表示矩阵主对角线元素的总和。

#### **作用**：
- 公式 9 主要用于计算 **两个变量（如多视图数据）之间的依赖性**。它通过使用 **核函数** 和 **Gram 矩阵** 来计算 **数据点在高维空间中的相似度**，并通过 HSIC 度量这两个数据集之间的关系。
- 它是 **HSIC** 的标准计算方法，用于评估两个数据集或视图之间的相关性。

---

### **公式 12：**

公式 12 在论文中涉及的是 **多个视图的依赖性计算**：

\[
\sum_{w=1, w \neq v}^V \text{HSIC}(Z^{(v)}, Z^{(w)}) = \text{tr}(Z^{(v)} H K Z^{(v)^T})
\]

#### **主要组成**：
- **\( Z^{(v)} \)** 和 **\( Z^{(w)} \)** 是不同视图的数据表示矩阵，表示第 \( v \) 个视图和第 \( w \) 个视图的子空间表示。
- **\( H \)** 是居中矩阵，确保计算时的数据点均值为零。
- **\( K \)** 是通过核函数计算得到的 **核矩阵**，表示视图之间数据点的相似度。

#### **作用**：
- 公式 12 计算的是 **多个视图之间的相似度**，具体来说，是度量 **第 \( v \) 个视图与所有其他视图** \( w \) 之间的 **依赖性**。
- 它是通过 **HSIC** 来衡量 **不同视图的子空间表示** 之间的相似性，旨在通过增强多视图数据的互补性来改善聚类或其他任务的效果。
  
---

### **相同点：**
1. **都使用 HSIC**：公式 9 和公式 12 都利用 **Hilbert-Schmidt独立性准则（HSIC）** 来度量数据间的相似性或依赖性。
2. **都涉及居中矩阵 \( H \)**：在两者的计算中，居中矩阵 \( H \) 的作用是消除数据点的均值效应，确保相似度计算不受均值的干扰。
3. **都使用核矩阵 \( K \)**：两者都依赖于通过核函数计算得到的 **核矩阵** \( K \)，来表示数据点之间的相似度。

### **不同点：**
1. **应用场景不同**：
   - **公式 9** 用于计算 **两个数据集（视图）之间的依赖性**，是一个标准的 **HSIC** 计算公式。
   - **公式 12** 用于计算 **多个视图之间的依赖性**，它涉及到对多个视图的相似度计算，并衡量视图间的相互依赖。

2. **数据表示不同**：
   - 在 **公式 9** 中，使用的是 **数据集的核矩阵**，即通过核函数计算得到的相似度矩阵。
   - 在 **公式 12** 中，使用的是 **视图的子空间表示矩阵 \( Z^{(v)} \)**，即不同视图中数据点的自表示矩阵。这些矩阵用于计算视图之间的相似度。

3. **计算的目标不同**：
   - **公式 9** 关注的是 **两个视图**（或数据集）之间的 **依赖性**，它是 **HSIC** 的基本计算形式。
   - **公式 12** 关注的是 **多个视图**（\( v \) 和 \( w \)）之间的 **依赖性**，它通过求和的方式将多个视图的相似度结合起来，确保所有视图之间的互补性。

### 总结：
- **公式 9** 是标准的 **HSIC** 计算公式，用于度量两个数据集或视图之间的依赖性。
- **公式 12** 扩展了 **HSIC**，用于计算多个视图之间的依赖性，特别是在子空间聚类任务中，通过多视图之间的相似度来确保它们的互补性和多样性。